@using DataPatrolTask.Models
@using DataPatrolTask.Services.Interfaces
@using MudBlazor
@inject IUserGroupRepository UserGroupRepo
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="group.GroupId" 
                      Label="Group ID" 
                      Disabled="!IsNew" />
        <MudTextField @bind-Value="group.Description" 
                      Label="Description" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Save">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; }
    [Parameter] public bool IsNew { get; set; }
    [Parameter] public UserGroup Group { get; set; } = new UserGroup();

    private UserGroup group = new UserGroup();

    protected override void OnParametersSet()
    {
        if (Group != null)
        {
            group = new UserGroup
            {
                GroupId = Group.GroupId,
                Description = Group.Description
            };
        }
    }

    private void Cancel() => MudDialog.Cancel();

    private async Task Save()
    {
        try
        {
            if (IsNew)
            {
                await UserGroupRepo.CreateAsync(group);
                Snackbar.Add("Group created successfully", Severity.Success);
            }
            else
            {
                await UserGroupRepo.UpdateAsync(group.GroupId, group);
                Snackbar.Add("Group updated successfully", Severity.Success);
            }
            
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error: {ex.Message}", Severity.Error);
        }
    }
}